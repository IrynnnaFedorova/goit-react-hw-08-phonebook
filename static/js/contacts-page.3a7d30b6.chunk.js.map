{"version":3,"file":"static/js/contacts-page.3a7d30b6.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","views/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__Yhze-\",\"label\":\"ContactForm_label__evum1\",\"input\":\"ContactForm_input__6Ahzm\"};","import Button from '../../components/Button';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport c from './ContactForm.module.css';\nimport { contactsOperations, contactsSelectors } from '../../redux/contatcs';\nimport { authSelectors } from '../../redux/auth';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const token = useSelector(authSelectors.getToken);\n\n  const dispatch = useDispatch();\n\n  const handleInput = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isOldContact = contacts.find(contact => contact.name === name);\n\n    if (isOldContact) {\n      alert(`${name} is already in contacts`);\n      setName('');\n      return;\n    }\n\n    dispatch(contactsOperations.addContact({ user: { name, number }, token }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n\n    setNumber('');\n  };\n\n  return (\n    <form className={c.form} onSubmit={handleSubmit}>\n      <label className={c.label}>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInput}\n          className={c.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={c.label}>\n        Number:\n        <input\n          type=\"number\"\n          name=\"number\"\n          value={number}\n          onChange={handleInput}\n          className={c.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <Button type=\"submit\" title=\"Add\" />\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ContactListItem_description__tdKz8\",\"box\":\"ContactListItem_box__F2z-F\",\"number\":\"ContactListItem_number__9siMi\",\"list\":\"ContactListItem_list__ZtYXg\",\"item\":\"ContactListItem_item__+t0+z\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Button';\nimport { contactsOperations } from '../../redux/contatcs';\nimport c from './ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number, id, token }) => {\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n\n  const deleteContactUser = id => {\n    dispatch(contactsOperations.deleteContact({ id, token }));\n  };\n\n  const openModal = () => {\n    dispatch(contactsOperations.stateModal(true));\n  };\n\n  return (\n    <div className={c.description}>\n      <div className={c.box}>\n        <p>{name}:</p>\n        <span className={c.number}>{number}</span>\n      </div>\n      <div className={c.boxButton}>\n        <ul className={c.list}>\n          <li className={c.item}>\n            <Button\n              type=\"button\"\n              title=\"Delete\"\n              onClick={() => deleteContactUser(id)}\n            />\n          </li>\n          <li className={c.item}>\n            <Link\n              to={{\n                pathname: `${location.pathname}/${id}`,\n                state: { id, from: location },\n              }}\n            >\n              <Button type=\"button\" title=\"Update\" onClick={openModal} />\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__tHlqa\",\"item\":\"ContactList_item__rkWZR\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactListItem from '../ContactListItem';\nimport { contactsOperations, contactsSelectors } from '../../redux/contatcs';\nimport { authSelectors } from '../../redux/auth';\nimport c from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  const token = useSelector(authSelectors.getToken);\n\n  const dispatch = useDispatch();\n\n  // помнить, что при выходе токен меняется на null, ф-ция useEffect отрабатывает, в параметр token прилетает null, поєтому проверка\n  useEffect(() => {\n    if (token) {\n      dispatch(contactsOperations.getContacts(token));\n    }\n  }, [dispatch, token]);\n\n  return (\n    <ul className={c.list}>\n      {contacts &&\n        contacts.map(({ name, number, id }) => (\n          <li key={id} className={c.item}>\n            <ContactListItem\n              name={name}\n              number={number}\n              id={id}\n              token={token}\n            />\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__YIGsx\",\"label\":\"Filter_label__zpcfF\",\"input\":\"Filter_input__8xWX+\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from '../../redux/contatcs';\nimport c from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(contactsSelectors.getFilter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className={c.filter}>\n      <label className={c.label}>\n        Enter name for filter:\n        <input\n          type=\"text\"\n          value={value}\n          onChange={e => dispatch(contactsOperations.filter(e.target.value))}\n          className={c.input}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\n\nconst ContactsView = () => {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsView;\n"],"names":["useState","name","setName","number","setNumber","contacts","useSelector","contactsSelectors","token","authSelectors","dispatch","useDispatch","handleInput","e","target","value","reset","className","c","onSubmit","preventDefault","find","contact","alert","contactsOperations","user","type","onChange","pattern","title","required","Button","id","location","useLocation","onClick","deleteContactUser","to","pathname","state","from","useEffect","map"],"sourceRoot":""}